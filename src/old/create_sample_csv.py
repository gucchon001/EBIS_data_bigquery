#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""
サンプルCSVファイル作成スクリプト

提供されたデータをCSVファイルとして/data/SE_SSresultディレクトリに保存します。
"""

import os
import csv
from pathlib import Path
import datetime

# データ定義（タブ区切りのデータから作成）
data = [
    ["id", "column_name", "column_name/mod", "sample", "data_type"],
    ["1", "CV名", "CV名", "応募完了", "str"],
    ["2", "CV時間", "CV時間", "45737.99779", "timestamp"],
    ["3", "ユーザーID", "ユーザーID", "v7n8kt2ogd.1742563093", "str"],
    ["4", "ユーザー名", "ユーザー名", "undefined", "str"],
    ["5", "売上金額", "売上金額", "1039482", "str"],
    ["6", "項目1", "項目1", "個別指導学院フリーステップ 国立教室[開成教育グループ]", "str"],
    ["7", "項目2", "項目2", "一橋大学/経済学部/経済学科/文系", "str"],
    ["8", "項目3", "項目3", "東京都", "str"],
    ["9", "項目4", "項目4", "39077", "int"],
    ["10", "項目5", "項目5", "高校生（卒業見込み）", "str"],
    ["11", "デバイス", "デバイス", "スマートフォン", "str"],
    ["12", "潜伏期間", "潜伏期間", "1時間38分36秒", "str"],
    ["13", "潜伏期間（秒）", "潜伏期間（秒）", "5916", "int"],
    ["14", "接触回数", "接触回数", "5", "int"],
    ["15", "直接効果(発生日時)", "直接効果_発生日時", "45737.99667", "timestamp"],
    ["16", "直接効果(チャネル種別)", "直接効果_チャネル種別", "ダイレクト", "str"],
    ["17", "直接効果(カテゴリ)", "直接効果_カテゴリ", "ダイレクト", "str"],
    ["18", "直接効果(広告グループ1)", "直接効果_広告グループ1", "ダイレクト", "str"],
    ["19", "直接効果(広告グループ2)", "直接効果_広告グループ2", "ダイレクト", "str"],
    ["20", "直接効果(広告ID)", "直接効果_広告ID", "ダイレクト", "str"],
    ["21", "直接効果(名称)", "直接効果_名称", "ダイレクト", "str"],
    ["22", "間接効果2(発生日時)", "間接効果2_発生日時", "45737.9338", "timestamp"],
    ["23", "間接効果2(チャネル種別)", "間接効果2_チャネル種別", "自然検索", "str"],
    ["24", "間接効果2(カテゴリ)", "間接効果2_カテゴリ", "Google", "str"],
    ["25", "間接効果2(広告グループ1)", "間接効果2_広告グループ1", "自然検索", "str"],
    ["26", "間接効果2(広告グループ2)", "間接効果2_広告グループ2", "自然検索", "str"],
    ["27", "間接効果2(広告ID)", "間接効果2_広告ID", "自然検索", "str"],
    ["28", "間接効果2(名称)", "間接効果2_名称", "_検索ワードなし", "str"],
    ["29", "間接効果3(発生日時)", "間接効果3_発生日時", "45737.93352", "timestamp"],
    ["30", "間接効果3(チャネル種別)", "間接効果3_チャネル種別", "広告クリック", "str"],
    ["31", "間接効果3(カテゴリ)", "間接効果3_カテゴリ", "tnews", "str"],
    ["32", "間接効果3(広告グループ1)", "間接効果3_広告グループ1", "WEBサイト", "str"],
    ["33", "間接効果3(広告グループ2)", "間接効果3_広告グループ2", "baitoXXXX", "str"],
    ["34", "間接効果3(広告ID)", "間接効果3_広告ID", "a5ba1b34dac995", "str"],
    ["35", "間接効果3(名称)", "間接効果3_名称", "バイト求人詳細画面/t-news送客_求人・施策/baito_XXXX/リファラル", "str"],
    ["36", "間接効果4(発生日時)", "間接効果4_発生日時", "45737.9305", "timestamp"],
    ["37", "間接効果4(チャネル種別)", "間接効果4_チャネル種別", "広告クリック", "str"],
    ["38", "間接効果4(カテゴリ)", "間接効果4_カテゴリ", "tnews", "str"],
    ["39", "間接効果4(広告グループ1)", "間接効果4_広告グループ1", "WEBサイト", "str"],
    ["40", "間接効果4(広告グループ2)", "間接効果4_広告グループ2", "baitoXXXX", "str"],
    ["41", "間接効果4(広告ID)", "間接効果4_広告ID", "a5ba1b34dac995", "str"],
    ["42", "間接効果4(名称)", "間接効果4_名称", "バイト求人詳細画面/t-news送客_求人・施策/baito_XXXX/リファラル", "str"],
    ["43", "間接効果5(発生日時)", "間接効果5_発生日時", "45737.92932", "timestamp"],
    ["44", "間接効果5(チャネル種別)", "間接効果5_チャネル種別", "広告クリック", "str"],
    ["45", "間接効果5(カテゴリ)", "間接効果5_カテゴリ", "tnews", "str"],
    ["46", "間接効果5(広告グループ1)", "間接効果5_広告グループ1", "WEBサイト", "str"],
    ["47", "間接効果5(広告グループ2)", "間接効果5_広告グループ2", "baitoXXXX", "str"],
    ["48", "間接効果5(広告ID)", "間接効果5_広告ID", "a5ba1b34dac995", "str"],
    ["49", "間接効果5(名称)", "間接効果5_名称", "バイト求人詳細画面/t-news送客_求人・施策/baito_XXXX/リファラル", "str"],
    ["50", "間接効果6(発生日時)", "間接効果6_発生日時", "", "timestamp"],
    ["51", "間接効果6(チャネル種別)", "間接効果6_チャネル種別", "", "str"],
    ["52", "間接効果6(カテゴリ)", "間接効果6_カテゴリ", "", "str"],
    ["53", "間接効果6(広告グループ1)", "間接効果6_広告グループ1", "", "str"],
    ["54", "間接効果6(広告グループ2)", "間接効果6_広告グループ2", "", "str"],
    ["55", "間接効果6(広告ID)", "間接効果6_広告ID", "", "str"],
    ["56", "間接効果6(名称)", "間接効果6_名称", "", "str"],
    ["57", "間接効果7(発生日時)", "間接効果7_発生日時", "", "timestamp"],
    ["58", "間接効果7(チャネル種別)", "間接効果7_チャネル種別", "", "str"],
    ["59", "間接効果7(カテゴリ)", "間接効果7_カテゴリ", "", "str"],
    ["60", "間接効果7(広告グループ1)", "間接効果7_広告グループ1", "", "str"],
    ["61", "間接効果7(広告グループ2)", "間接効果7_広告グループ2", "", "str"],
    ["62", "間接効果7(広告ID)", "間接効果7_広告ID", "", "str"],
    ["63", "間接効果7(名称)", "間接効果7_名称", "", "str"],
    ["64", "間接効果8(発生日時)", "間接効果8_発生日時", "", "timestamp"],
    ["65", "間接効果8(チャネル種別)", "間接効果8_チャネル種別", "", "str"],
    ["66", "間接効果8(カテゴリ)", "間接効果8_カテゴリ", "", "str"],
    ["67", "間接効果8(広告グループ1)", "間接効果8_広告グループ1", "", "str"],
    ["68", "間接効果8(広告グループ2)", "間接効果8_広告グループ2", "", "str"],
    ["69", "間接効果8(広告ID)", "間接効果8_広告ID", "", "str"],
    ["70", "間接効果8(名称)", "間接効果8_名称", "", "str"],
    ["71", "間接効果9(発生日時)", "間接効果9_発生日時", "", "timestamp"],
    ["72", "間接効果9(チャネル種別)", "間接効果9_チャネル種別", "", "str"],
    ["73", "間接効果9(カテゴリ)", "間接効果9_カテゴリ", "", "str"],
    ["74", "間接効果9(広告グループ1)", "間接効果9_広告グループ1", "", "str"],
    ["75", "間接効果9(広告グループ2)", "間接効果9_広告グループ2", "", "str"],
    ["76", "間接効果9(広告ID)", "間接効果9_広告ID", "", "str"],
    ["77", "間接効果9(名称)", "間接効果9_名称", "", "str"],
    ["78", "間接効果10(発生日時)", "間接効果10_発生日時", "", "timestamp"],
    ["79", "間接効果10(チャネル種別)", "間接効果10_チャネル種別", "", "str"],
    ["80", "間接効果10(カテゴリ)", "間接効果10_カテゴリ", "", "str"],
    ["81", "間接効果10(広告グループ1)", "間接効果10_広告グループ1", "", "str"],
    ["82", "間接効果10(広告グループ2)", "間接効果10_広告グループ2", "", "str"],
    ["83", "間接効果10(広告ID)", "間接効果10_広告ID", "", "str"],
    ["84", "間接効果10(名称)", "間接効果10_名称", "", "str"],
    ["85", "初回接触(発生日時)", "初回接触_発生日時", "45737.92932", "timestamp"],
    ["86", "初回接触(チャネル種別)", "初回接触_チャネル種別", "広告クリック", "str"],
    ["87", "初回接触(カテゴリ)", "初回接触_カテゴリ", "tnews", "str"],
    ["88", "初回接触(広告グループ1)", "初回接触_広告グループ1", "WEBサイト", "str"],
    ["89", "初回接触(広告グループ2)", "初回接触_広告グループ2", "baitoXXXX", "str"],
    ["90", "初回接触(広告ID)", "初回接触_広告ID", "a5ba1b34dac995", "str"],
    ["91", "初回接触(名称)", "初回接触_名称", "バイト求人詳細画面/t-news送客_求人・施策/baito_XXXX/リファラル", "str"],
]

def create_sample_csv():
    """サンプルCSVファイルを作成して保存します"""
    # 出力ディレクトリの作成
    output_dir = Path("data/SE_SSresult")
    output_dir.mkdir(parents=True, exist_ok=True)
    
    # 現在時刻を含むファイル名を生成
    now = datetime.datetime.now()
    date_str = now.strftime("%Y%m%d_%H%M%S")
    output_file = output_dir / f"schema_sample_{date_str}.csv"
    
    # CSVファイルに書き込み
    with open(output_file, "w", newline="", encoding="utf-8") as f:
        writer = csv.writer(f)
        for row in data:
            writer.writerow(row)
            
    print(f"CSVファイルを保存しました: {output_file}")
    
    # 見やすいフォーマットでファイルも作成
    output_file_pretty = output_dir / f"schema_sample_pretty_{date_str}.csv"
    with open(output_file_pretty, "w", newline="", encoding="utf-8") as f:
        # 項目ごとにカンマ付き表示
        writer = csv.writer(f)
        for row in data:
            writer.writerow(row)
            
    print(f"整形済みCSVファイルを保存しました: {output_file_pretty}")
    
    # サンプルデータを含むCSVも生成
    # カラム名だけでなく、実際のデータも含むCSVを作成
    output_file_data = output_dir / f"sample_data_{date_str}.csv"
    
    # 実データ行を作成（サンプルデータを使用）
    sample_rows = []
    header_row = []
    
    # カラム名（修正済み）を取得
    for row in data[1:]:  # ヘッダー行をスキップ
        header_row.append(row[2])  # column_name/mod を使用
    
    # サンプルデータ行を追加
    sample_row = []
    for row in data[1:]:  # ヘッダー行をスキップ
        sample_row.append(row[3])  # sample データを使用
    
    with open(output_file_data, "w", newline="", encoding="utf-8") as f:
        writer = csv.writer(f)
        writer.writerow(header_row)  # ヘッダー行を書き込み
        writer.writerow(sample_row)  # サンプルデータ行を書き込み
        
        # 追加のサンプルデータ行をランダムに生成
        for _ in range(5):
            # 簡易的にサンプルデータを少し変更したものを追加
            modified_row = sample_row.copy()
            # 文字列を少し変える（例：ユーザーIDやCVなど）
            if modified_row[2]:  # ユーザーID（空でない場合）
                import random
                random_suffix = ''.join([str(random.randint(0, 9)) for _ in range(5)])
                modified_row[2] = f"v{random_suffix}.{int(datetime.datetime.now().timestamp())}"
            writer.writerow(modified_row)
    
    print(f"サンプルデータCSVファイルを保存しました: {output_file_data}")

if __name__ == "__main__":
    create_sample_csv() 